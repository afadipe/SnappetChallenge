@model VATMVCAPPFramework.Models.CampusViewModel

@{
    ViewBag.Title = "Campus";
    Layout = null;
}

@using (Html.BeginForm((string)ViewBag.PostAction, "Campus", new { area = "APPPortal" }, FormMethod.Post, new
{
    @class = "form-horizontal",
    role = "form"

}))
{
    @Html.AntiForgeryToken()
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h1 class="page-heading" id="myModalLabel">@ViewBag.ModalTitle Campus</h1>
    </div>
    <div class="modal-body">
        @Html.HiddenFor(m => m.ID)
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = true } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", required = true } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ContactFirstName, htmlAttributes: new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.ContactFirstName, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(model => model.ContactFirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ContactLastName, htmlAttributes: new { @class = "control-label col-sm-3" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.ContactLastName, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(model => model.ContactLastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        @if (Model.ID.ToString() != null && Model.ID >= 1)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", required = true } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = true } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model.ID.ToString() != null && Model.ID >= 1)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", required = true } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
        }




        <div class="form-group">
            @Html.LabelFor(model => model.ContactMobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactMobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactMobileNo, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-info">@ViewBag.ButtonAction</button>
        </div>
    </div>
}


