

@model VATMVCAPPFramework.ViewModel.ProgrammeSessionViewModel2
@using VATMVCAPPFramework.Data.Core

@{
    ViewBag.Title = "Create Programme Session Term";
    Layout = null;
}

<div class="modal-content">
    <!-- Begin page heading -->

    @using (Html.BeginForm((string)ViewBag.PostAction, "Session", new { area = "APPPortal" }, FormMethod.Post, new
    {
        @class = "form-horizontal",
        role = "form"
    }))

    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m=>m.ProgrammeId)
        @Html.HiddenFor(m => m.SessionId)
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h1 class="page-heading" id="myModalLabel">@ViewBag.ModalTitle Programme Session Term</h1>
        </div>
        <div class="modal-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.SessionName, htmlAttributes: new { @class = "control-label col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.SessionName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", required = true } })
                    @Html.ValidationMessageFor(model => model.SessionName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SessionStartDate, htmlAttributes: new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                            
                                @Html.EditorFor(model => model.SessionStartDate, new { htmlAttributes = new { @class = "form-control" , @readonly = "readonly"} })
                          
                            @Html.ValidationMessageFor(model => model.SessionStartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SessionEndDate, htmlAttributes: new { @class = "control-label col-sm-3" })
                        <div class="col-sm-8">
                                @Html.EditorFor(model => model.SessionEndDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.SessionEndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>


            @if (Model.ProgsessiontermList != null && Model.ProgsessiontermList.Count() >= 1)
            {
                var count = Model.ProgsessiontermList.Count();
                <table class="table table-striped" id="regionalEmployeeHistory">
                    <thead>
                        <tr>
                            <td>Name</td>
                            <td>Start Date</td>
                            <td>End Date</td>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int item = 0; item < count; item++)
                        {
                            var broadSheet = Model.ProgsessiontermList[item];

                            <tr>
                                @Html.HiddenFor(x=> Model.ProgsessiontermList[item].TermID)
                                @Html.HiddenFor(x => Model.ProgsessiontermList[item].ProgrammeSessionTermId)
                                <td>@Html.DisplayFor(x => Model.ProgsessiontermList[item].TermName)</td>
                                <td>
                                    <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy">
                                        @Html.EditorFor(x => Model.ProgsessiontermList[item].StartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        <div class="input-group-addon">
                                            <span class="glyphicon glyphicon-th"></span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy">
                                        @Html.EditorFor(x => Model.ProgsessiontermList[item].EndDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        <div class="input-group-addon">
                                            <span class="glyphicon glyphicon-th"></span>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }


        </div>
        <!-- /.row -->
        <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-info">@ViewBag.ButtonAction</button>
        </div>
    }

</div>

<script type="text/javascript">

    $(".select2").select2();
    $.fn.datepicker.defaults.format = "dd-mm-yyyy";
    $('.datepicker').datepicker();
    $.fn.modal.Constructor.prototype.enforceFocus = function () { };

</script>


