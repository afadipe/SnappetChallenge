@model System.Data.DataTable

@if (Model.Rows.Count > 0)
{

    @(Html.Kendo().Grid<dynamic>()
    .Name("Grid")
    .Columns(columns =>
    {
        foreach (System.Data.DataColumn column in Model.Columns)
        {
            if (column.ColumnName == "Id")
            {
                columns.Bound(column.ColumnName).Visible(false);
            }
            else if (column.ColumnName == "StudentName" || column.ColumnName == "PrincipalComment" || column.ColumnName == "UniqueComment")
            {
                columns.Bound(column.ColumnName).Width(250);
            }
            else
            {
                columns.Bound(column.ColumnName).Width(100);
            }

            //columns.Command(cmd => cmd.Edit());
        }
        columns.Command(command => command.Edit()).Width(150);
    })
         .ToolBar(toolbar =>
        {
            toolbar.Pdf();
            toolbar.Excel();
        })
                .Pdf(pdf => pdf
                .AllPages()
                .AvoidLinks()
                .PaperSize("A2")
                .Scale(0.8)
                .Margin("2cm", "1cm", "1cm", "1cm")
                .Landscape()
                .RepeatHeaders()
                .TemplateId("page-template")
                .FileName("Students BroadSheet Export.pdf")
                    .ProxyURL(Url.Action("Pdf_Export_Save", "BroadSheet", new { area = "APPPortal" }))
                    .ForceProxy(true)
            )
            .Excel(excel => excel
                .AllPages(true)
            )
           .Pageable()
        .Sortable()
        .Editable(ed => ed.Mode(GridEditMode.PopUp))
        .Scrollable()
        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
            {
                var id = Model.PrimaryKey[0].ColumnName;
                model.Id(id);
                foreach (System.Data.DataColumn column in Model.Columns)
                {
                    var field = model.Field(column.ColumnName, column.DataType);
                    
                    if (column.ColumnName != "PrincipalComment" && column.ColumnName != "UniqueComment")
                    {
                        field.Editable(false);
                    }
                    
                }
            }).Read(read => read.Action("Read", "BroadSheet", new { area = "APPPortal" }).Data("aditionalInfo"))
              .Update(update => update.Action("Update", "BroadSheet", new { area = "APPPortal" }).Data("aditionalInfo"))
    )
    )
}


