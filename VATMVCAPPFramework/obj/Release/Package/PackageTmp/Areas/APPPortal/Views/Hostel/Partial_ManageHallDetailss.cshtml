@model VATMVCAPPFramework.Models.HallViewModel
@using VATMVCAPPFramework.CustomClass
@using VATMVCAPPFramework.Data.Entities
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Hall Activity Log</h4>
        <hr />
        @Model.HallName
        <form class="form-horizontal" role="form">
            <div class="form-group">
                <label for="inputEmail3" class="col-sm-3 control-label">Event Date</label>
                <div class="col-sm-9">
                    @Html.EditorFor(model => model.EventDat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", required = true } })
                </div>
            </div>
            <div class="form-group">
                <label for="inputPassword3" class="col-sm-3 control-label">Event Description</label>
                <div class="col-sm-9">

                    @Html.EditorFor(model => model.EventDescrption, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", required = true } })
                </div>
            </div>
            <div class="form-group">
                <label for="inputPassword4" class="col-sm-3 control-label">Supervisor</label>
                <div class="col-sm-9">

                    @Html.EditorFor(model => model.Supervisor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", required = true } })
                </div>
            </div>
            <div class="form-group">
                <label for="inputPassword4" class="col-sm-3 control-label">Hall Name</label>
                <div class="col-sm-9">

                    @Html.EditorFor(model => model.HallName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", required = true } })
                </div>
            </div>
        </form>
        @Html.HiddenFor(x => x.SelectedHall)

        @if (Model.HallIDlog != null && Model.HallIDlog.Count() >= 1)
        {
            var count = Model.HallIDlog.Count();
            <table class="table table-striped" id="regionalEmployeeHistory">
                <thead>
                    <tr>
                        <td></td>
                        <td>Applicable Hall</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var m in Model.HallIDlog)
                    {

                        <tr>
                            @if (@m.HallHostelID > 0)
                            {
                                <td><input type="checkbox" name="SelectedHall" checked="checked" value="@m.HallID" class="pending" /></td>
                            }
                            else
                            {
                                <td><input type="checkbox" name="SelectedHall" value="@m.HallID" class="inClass" /></td>
                            }
                            <td>@Html.DisplayFor((x) => m.HallName)</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-info">@ViewBag.ButtonAction</button>
        </div>
    </div>
}












