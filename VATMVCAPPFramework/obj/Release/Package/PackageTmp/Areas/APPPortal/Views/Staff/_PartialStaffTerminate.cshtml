
@model VATMVCAPPFramework.ViewModel.StaffTerminatonViewModel
@using VATMVCAPPFramework.Utilities

@using (Html.BeginForm((string)ViewBag.PostAction, "Staff", new { area = "APPPortal" }, FormMethod.Post, new
{
    @class = "form-horizontal",
    role = "form"
}))

{
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.StaffID)
    @Html.HiddenFor(m => m.StaffCode)

    <div class="form-group">
        <label for="inputEmail3" class="col-sm-3 control-label">Reason For Termination</label>
        <div class="col-sm-9">
            @Html.DropDownListFor(m => m.ReasonForTermination, EnumHelper.GetSelectList(typeof(VATMVCAPPFramework.ViewModel.TerminationReasonEnum)), "Please select...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ReasonForTermination, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        <label for="inputEmail3" class="col-sm-3 control-label">Termination Remark</label>
        <div class="col-sm-9">
            @Html.EditorFor(model => model.TerminationRemark, new { htmlAttributes = new { @class = "form-control", required = true } })
        </div>
    </div>

    
        <div class="form-group">
            @Html.LabelFor(model => model.DateTerminated, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-8">
                <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy">
                    @Html.EditorFor(model => model.DateTerminated, new { htmlAttributes = new { @class = "form-control" } })
                    <div class="input-group-addon">
                        <span class="glyphicon glyphicon-th"></span>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.DateTerminated, "", new { @class = "text-danger" })
            </div>
        </div>


    if(ViewBag.HasTermination == false)
    {
        <button type="submit" class="btn btn-info">@ViewBag.ButtonAction</button>
    }


}

