@model VATMVCAPPFramework.Models.RoomViewModel
@using VATMVCAPPFramework.Data.Entities;
@using VATMVCAPPFramework.CustomClass
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RoomName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.RoomName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoomName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HallID, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.HallID, new SelectList(SectionHelper.GetRoom(), "ID", "HallName"), "Select Hall.", new { @class = "form-control", Required = true })
                @Html.ValidationMessageFor(model => model.HallID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoofBedSpace, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.NoofBedSpace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoofBedSpace, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.NoofOccupant, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoofOccupant, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoofOccupant, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.NoOfRooms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoOfRooms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoOfRooms, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfExpectedOccupants, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.NumberOfExpectedOccupants, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfExpectedOccupants, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-info">@ViewBag.ButtonAction</button>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
